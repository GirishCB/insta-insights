# Default values for insta-insights.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

prometheus:
  serverFiles:
    prometheus.yml:
      scrape_configs:
        - job_name: postgres-exporter
          scrape_interval: 20m
          scrape_timeout: 15m
          honor_timestamps: false
          static_configs:
            - targets: 
              - insta-insights-prometheus-postgres-exporter:80

prometheus-postgres-exporter:
  config:
    datasource:
      # Specify one of both datasource or datasourceSecret
      host: host.minikube.internal
      user: postgres
      # Only one of password, passwordFile, passwordSecret and pgpassfile can be specified
      password:
      # Specify passwordFile if DB password is stored in a file.
      # For example, to use with vault-injector from Hashicorp
      passwordFile: ''
      # Specify passwordSecret if DB password is stored in secret.
      passwordSecret: {}
      # Secret name
      #  name:
      # Password key inside secret
      #  key:
      pgpassfile: ''
      # If pgpassfile is set, it is used to initialize the PGPASSFILE environment variable.
      # See https://www.postgresql.org/docs/14/libpq-pgpass.html for more info.
      port: "5432"
      database: ''
      sslmode: disable
      extraParams: ''

    externalQueries:
      enabled: false
      configmap: postgresql-common-exporter-queries
    # These are the default queries that the exporter will run, extracted from: https://github.com/prometheus-community/postgres_exporter/blob/master/queries.yaml
    queries: |-
      pg_bill_charges_per_bill:
        query: "select bill_no, count(*) as count from cen.bill_charge group by bill_no order by 2 desc limit 10"
        master: true
        metrics:
          - bill_no:
              usage: "LABEL"
              description: "Bill Number"
          - count:
              usage: "GAUGE"
              description: "Number of bill charges"

      pg_total_users:
        query: "select count(*) as count from cen.u_user"
        master: true
        metrics:
          - count:
              usage: "GAUGE"
              descripton: "Number of users"

      pg_database_size:
        query: "SELECT pg_database.datname, pg_database_size(pg_database.datname) as bytes FROM pg_database"
        master: true
        cache_seconds: 30
        metrics:
          - datname:
              usage: "LABEL"
              description: "Name of the database"
          - bytes:
              usage: "GAUGE"
              description: "Disk space used by the database"

grafana:
  datasources: {}
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: 
        access: proxy
        isDefault: true